@model sdf_asp_net.ViewModels.ProjectViewModel

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    ViewBag.Title = "DetailView";
}
<div class="col-md-12">
</div>
<div>

    <div class="jumbotron">
        <h1 class="display-4">Projekt: @Html.DisplayFor(model => model.Name)</h1>
        <p class="lead">Beschreibung: @Html.DisplayFor(model => model.Description)</p>
        <hr class="my-4">
        <p>Projektleiter: @Html.DisplayFor(model => model.ManagerName) </p>

        <h2>Chat</h2>
        <div class="container">
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
            <ul id="discussion"></ul>
        </div>

    </div>

    @{string userName = Model.ManagerName;}

    <hr />
    @using (Html.BeginForm("DownloadFile", "Project", FormMethod.Post))
    {
        <input type="hidden" id="hfFileId" name="FileId" />
        <input type="submit" id="btnDownload" value="Download" style="display:none" />
    }
    <div class="container">
        <div class="row">
            <div class="col-9">
                <h2>Messageboard</h2>
                <div class="list-group" style="height: 500px; overflow-y: scroll;">

                    @for (int i = 0; i < Model.Messages.Count; i++)
                    {
                        <a href="#" class="list-group-item list-group-item-action flex-column align-items-start active">
                            <div class="d-flex w-100 justify-content-between">
                                <h2 class="mb-1">@Model.Messages[i].Message</h2>
                                <small>veröffentlicht am: @Model.Messages[i].Date</small>
                            </div>
                            <small class="mb-1">von: @Model.Messages[i].Author</small>
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@Model.Messages[i].FileName</h6>
                                <small class="mb-1">@Model.Messages[i].FileContentType</small>
                            </div>
                        </a>
                        if (@ViewBag.IsAuthorized != null && userName != null)
                        {
                            if (userName.ToString().Contains(@ViewBag.IsAuthorized) && @Model.Messages[i].FileName.ToString().Length > 0)
                            {
                                <a href="javascript:;" onclick="DownloadFile(@Model.Messages[i].Id)">Download</a>
                            }
                        }
                        <br />
                    }
                </div>
            </div>
        </div>
    </div>

    <br />
    @using (Html.BeginForm("Message", "Project", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (@ViewBag.IsAuthorized != null && userName != null)
        {
            if (userName.ToString().Contains(@ViewBag.IsAuthorized))
            {
                <div class="input-group">
                    <input type="text" id="messageInput" name="message" class="form-control" placeholder="Deine Nachricht" aria-label="Message" aria-describedby="button-addon4">
                    <input type="hidden" name="projectId" class="form-control" value="@Html.DisplayFor(model => model.Id)" aria-label="Message" aria-describedby="button-addon4">
                    <div class="input-group-append" id="button-addon4">
                        <input type="file" name="postedFile" class="btn btn-primary" />
                        <input type="submit" id="btnUpload" value=">" class="btn btn-primary" />
                    </div>
                </div>
            }
        }
    }
</div>
<br />

<p>
    <a href="@Url.Action("Index", "Project")" class="btn btn-success float-right btn-lg" role="button" aria-pressed="true">Zurück zu der Projektliste</a>
    @if (@ViewBag.IsAuthorized != null && userName != null)
    {
        if (userName.ToString().Contains(@ViewBag.IsAuthorized))
        {
            <a href="@Url.Action("Edit", "Project", new { id = Model.Id })" class="btn btn-primary float-right btn-lg" role="button" aria-pressed="true">Bearbeiten</a>
        }
    }
</p>

<hr>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    function DownloadFile(fileId) {
        $("#hfFileId").val(fileId);
        $("#btnDownload")[0].click();
    };
</script>
@section scripts {

    <!--    Script references. -- >
        < !--The jQuery library is required and is referenced by default in _Layout.cshtml. -- >
        < !--Reference the SignalR library. -- >
            <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>

    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                
                $('#discussion').append('<li><strong>' + htmlEncode('@Html.DisplayFor(model => model.ManagerName)')
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                
            };
            // Get the user name and store it to prepend to messages.
            // $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}