@model System.Data.DataTable
@{

    ViewBag.Title = "Projekte";
}
<div class="col-md-12">
    <a href="@Url.Action("Create", "Project")" class="btn btn-primary float-right btn-lg active" role="button" aria-pressed="true">Projekt erstellen</a>
</div>
<h2>Projekte</h2>

<hr />
<div>
    <h3>Chat</h3>

    <textarea  style="resize: none;" id="text" name="text" cols="70" rows="8"></textarea>
    <textarea  style="resize: none;" id="user" name="text" cols="50" rows="8"></textarea>
    <br />
    <input type="text" id="messageGroup" />
    <input type="button" id="btnSendGroup" value="Send" />
    <br />
    <ul id="discussion"></ul>

</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tr>
            <th>Name</th>
            <th>Beschreibung</th>
            <th>Projektleiter</th>
            <th>Funktionen</th>

        </tr>
        @for (int i = 0; i < Model.Rows.Count; i++)
        {
            <tr>
                <td>@Model.Rows[i][1]</td>
                <td>@Model.Rows[i][2]</td>
                <td>@Model.Rows[i][4]</td>

                <td>
                    <a href="@Url.Action("DetailView", "Project", new { @id=Model.Rows[i][0]})" class="btn btn-primary btn-lg" role="button" aria-pressed="true">Anzeigen</a>
                    @if (@Model.Rows[i][4].ToString().Contains(@ViewBag.Username))
                    {
                        <a href="@Url.Action("Edit", "Project", new { @id=Model.Rows[i][0]})" class="btn btn-success btn-lg" role="button" aria-pressed="true">Bearbeiten</a>
                        <a href="@Url.Action("Delete", "Project", new { @id=Model.Rows[i][0]})" class="btn btn-danger btn-lg" role="button" aria-pressed="true">Löschen</a>
                    }

                </td>
            </tr>
        }
    </table>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                var text = document.getElementById("text").value += htmlEncode(name) + htmlEncode(message) + '\n';
                checkTextareaHeight(text);
            };



            chat.client.addNewMessageToAll = function (name, message) {

                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };





            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {

                $('#btnSendAll').click(function () {
                    chat.server.sendAll("ester", $('#messageAll').val());
                });



            chat.server.joinGroup("Tester","home");


                $('#btnSendGroup').click(function () {
                    chat.server.sendGroups("Tester","home", $('#messageGroup').val());
                });



            });
        });
        // This optional function html-encodes messages for display in the page.

            function checkTextareaHeight(text) {
                text = this.text;

                if (text.selectionStart == text.selectionEnd) {
                    text.scrollTop = text.scrollHeight;
                }
            }
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        function fillModel() {
            var chatModel = {}
            chatModel.id = 0;
            chatModel.message = $("msg").val();
            chatModel.user = "@User.Identity.Name";
            chatModel.timeStamp = Date.now();
            }
    </script>
}